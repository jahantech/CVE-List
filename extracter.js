var https = require('https');
var AdmZip = require('adm-zip');
var fs = require('fs');

var objectsToDownload = ['CVE-List', 'https://nvd.nist.gov/feeds/xml/cve/nvdcve-2.0-Modified.xml.zip'];

var download = function(filename, url, cb) {
    var tmpFilePath = filename + ".zip";
    https.get(url, function(response) {
        response.on('data', function(data) {
            fs.appendFileSync(tmpFilePath, data);
        });

        response.on('end', function() {
            var zip = new AdmZip(tmpFilePath);
            zip.extractAllTo(filename);
            fs.unlink(tmpFilePath);
            cb();
        });
    });
};


function loadXMLDoc(filePath) {
    var fs = require('fs');
    var xml2js = require('xml2js');
    var json;
    try {
        var fileData = fs.readFileSync(filePath, 'ascii');

        var parser = new xml2js.Parser();

        parser.parseString(fileData.substring(0, fileData.length), function(err, result) {
            json = JSON.stringify(result);

        });
        var i;
        json = JSON.parse(json);

        for (i = 0; i < (json.nvd.entry).length; i++) {

            if (json.nvd.entry[i]["vuln:cvss"] !== undefined){
                console.log('********************');
                console.log('CVE Entry Number: '+ json.nvd.entry[i].$.id);
                console.log('Published Date: '+ json.nvd.entry[i]["vuln:published-datetime"]);
                console.log('Rating: '+json.nvd.entry[i]["vuln:cvss"][0]['cvss:base_metrics'][0]["cvss:score"][0]);
                console.log('Summary: '+json.nvd.entry[i]["vuln:summary"][0]);
            }
        }

    } catch (ex) {
        console.log(ex);
    }
}
download(objectsToDownload[0], objectsToDownload[1],function () {
        loadXMLDoc(objectsToDownload[0] + "/" + "nvdcve-2.0-Modified.xml");
    }
        );

function UpdateVuln(Id, Date, Score, Product, Summary, Del_Flag) {
    var mysql = require('mysql');
    var connection = mysql.createConnection({
        host: '192.168.1.85',
        user: 'root',
        pasword: '',
        database: 'vulner_stats'
    });

    connection.connect();
    if (Del_Flag === true) {
        connection.query("DELETE FROM vulnerabilities");
        if (err) {
            console.log("Unable to delete the contents of the table");
        } else {
            console.log("Database table cleared");
        }
    } else {
        console.log("Inserting records into the table");
        connection.query('INSERT INTO vulner_stats.vulnerabilities VALUES(\'' + Id + '\',' + Date + ',' + Score + ',\'' + Product + '\',\'' + Summary + '\''),
            function(err, rows, fields) {
                if (err){
                    throw err;
                }
                console.log('The solution is: ', rows[0].solution);
            };
}
connection.end();

}
