var https = require('https');
var AdmZip = require('adm-zip');
var fs = require('fs');
var moment = require('moment');
var busy=0;
var objectsToDownload = ['CVE-List', 'https://nvd.nist.gov/feeds/xml/cve/nvdcve-2.0-modified.xml.zip'];
console.log("Connecting to mysql");
var mysql = require('mysql');
var connection = mysql.createConnection({
        host: '127.0.0.1',
        user: 'root',
        password: '',
        database: 'vulner_stats'
});
connection.connect();


var download = function(filename, url, cb) {
    var tmpFilePath = filename + ".zip";
    https.get(url, function(response) {
        response.on('data', function(data) {
            fs.appendFileSync(tmpFilePath, data);
        });

        response.on('end', function() {
            var zip = new AdmZip(tmpFilePath);
            zip.extractAllTo(filename,true);
            fs.unlink(tmpFilePath);
            cb();
        });
    });
};


function loadXMLDoc(filePath) {
    var fs = require('fs');
    var xml2js = require('xml2js');
    var json;
    try {
        updateVuln(null, null, null, null, null, true);
        var fileData = fs.readFileSync(filePath, 'ascii');

        var parser = new xml2js.Parser();

        parser.parseString(fileData.substring(0, fileData.length), function(err, result) {
            json = JSON.stringify(result);

        });
        var i;
        json = JSON.parse(json);

        for (i = 0; i < (json.nvd.entry).length; i++) {

            if (json.nvd.entry[i]["vuln:cvss"] !== undefined){
                busy++;
                ///console.log('********************');
                console.log('CVE Entry Number: '+ json.nvd.entry[i].$.id);
                console.log('Published Date: '+ json.nvd.entry[i]["vuln:published-datetime"]);
                console.log('Rating: '+json.nvd.entry[i]["vuln:cvss"][0]['cvss:base_metrics'][0]["cvss:score"][0]);
                console.log('Summary: '+json.nvd.entry[i]["vuln:summary"][0]);
                var dt = new Date(json.nvd.entry[i]["vuln:published-datetime"]);
                //console.log(moment(dt).format("YYYY-MM-DD HH:MM:S"));
                
		if (typeof json.nvd.entry[i]["vuln:vulnerable-software-list"] === 'undefined' )
		{
			updateVuln(json.nvd.entry[i].$.id, moment(dt).format("YYYY-MM-DD HH:MM:S"),
                 		json.nvd.entry[i]["vuln:cvss"][0]['cvss:base_metrics'][0]["cvss:score"][0],
                 		"", json.nvd.entry[i]["vuln:summary"][0], false);

		}else
		{
			var products_list="";
			console.log((json.nvd.entry[i]["vuln:vulnerable-software-list"][0]["vuln:product"]).length);
			for (iii=0; iii < (json.nvd.entry[i]["vuln:vulnerable-software-list"][0]["vuln:product"]).length ; iii++)
			{
				products_list = products_list + json.nvd.entry[i]["vuln:vulnerable-software-list"][0]["vuln:product"][iii]+"<br>";
				
			}
			updateVuln(json.nvd.entry[i].$.id, moment(dt).format("YYYY-MM-DD HH:MM:S"),
                 		json.nvd.entry[i]["vuln:cvss"][0]['cvss:base_metrics'][0]["cvss:score"][0],
                 		products_list,json.nvd.entry[i]["vuln:summary"][0], false);
                }
		//p
                //console.log(busy);
            } else {
			 console.log('Published Date: '+ json.nvd.entry[i]["vuln:published-datetime"]);
	    
	    }
        }

    } catch (ex) {
        console.log(ex);
    } finally {
        connection.end();
    }
}

download(objectsToDownload[0], objectsToDownload[1],function () {
        loadXMLDoc(objectsToDownload[0] + "/" + "nvdcve-2.0-modified.xml");
    }
        );

function updateVuln(Id, Date, Score, Product, Summary, delFlag) {
    if (delFlag ===  true) {
        connection.query("DELETE FROM vulnerabilities");
    } else {
        console.log("Inserting records into the table");

        connection.query('INSERT INTO vulner_stats.vulnerabilities (vuln_id, vuln_pub_date, vuln_score, vuln_products, vuln_summary) ' +
            'VALUES (\'' +Id + '\',"' + Date + '",' + Score + ',\'' + Product + '\',' + mysql.escape(Summary) + ')'),
            function(err) {
                if (err){
                    console.log('INSERT INTO vulner_stats.vulnerabilities (vuln_id, vuln_pub_date, vuln_score, vuln_products, vuln_summary) ' +
            'VALUES (\'' +Id + '\',"' + Date + '",' + Score + ',\'' + Product + '\',' + mysql.escape(Summary) + ')');
                    console.log(err);
                } else {
                    console.log("");
                }
            };
    }
}
